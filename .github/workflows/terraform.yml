name: Terraform

# イベントトリガーの設定
on:
  push: # pushイベントがトリガー
    branches:
      - main
  pull_request: # プルリクエストイベントがトリガー
    branches:
      - main

# ジョブの定義
jobs:
  terraform:
    runs-on: ubuntu-latest # ジョブを実行する環境を指定

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2 # リポジトリをチェックアウト

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1 # Terraformのセットアップ
      with:
        terraform_version: 1.0.5 # 使用するTerraformのバージョン

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2 # AWS資格情報の設定
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} # GitHub SecretsからAWSアクセスキーIDを取得
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # GitHub SecretsからAWSシークレットアクセスキーを取得
        aws-region: ap-northeast-1 # AWSリージョンの指定

    - name: Debug SSH Key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
        chmod 600 private_key.pem
        ssh-keyscan 18.183.35.85 >> ~/.ssh/known_hosts
        ssh -i private_key.pem ubuntu@18.183.35.85 hostname
  
    - name: Terraform Init
      run: terraform init # Terraformの初期化
      env:
        TF_LOG: DEBUG
        TF_LOG_PATH: terraform.log

    # - name: Terraform Apply
    #   run: terraform apply -auto-approve -var "ssh_private_key=${{ secrets.SSH_PRIVATE_KEY }}" # Terraformの適用
    - name: Terraform Apply
      run: terraform apply -auto-approve -var "ssh_private_key=${{ secrets.SSH_PRIVATE_KEY }}"
      env:
        TF_LOG: DEBUG
        TF_LOG_PATH: terraform.log

    - name: Terraform Plan
      if: github.event_name == 'pull_request'
      run: terraform plan -var "ssh_private_key=${{ secrets.SSH_PRIVATE_KEY }}" # Terraformの計画表示（プルリクエストの場合）
      env:
        TF_LOG: DEBUG
        TF_LOG_PATH: terraform.log

    - name: Upload Terraform log
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: terraform-log
        path: terraform.log